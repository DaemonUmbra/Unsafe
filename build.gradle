plugins {
    id 'org.ajoberstar.reckon' version '0.9.0'
    id 'org.ajoberstar.grgit' version '3.0.0'
    id 'com.github.ben-manes.versions' version '0.20.0'
}
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

group 'net.minecraftforge'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jacoco {
    toolVersion = '0.8.2'
}

reckon {
    scopeFromProp()
    stageFromProp('milestone', 'rc', 'final')
}

reckonTagCreate.dependsOn check

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

test {
    useJUnitPlatform()
}

ext.antlr = [
        grammarpackage: 'net.minecraftforge.accesstransformer.generated',
        antlrSource: 'src/main/antlr4',
        destinationDir: "src/generated-sources/java"
]


ext.sharedManifest = manifest {
    attributes(['Specification-Title': 'unsafe',
                'Specification-Vendor': 'Forge',
                'Specification-Version': '1', // Currently version 1 of the accesstransformer specification
                'Implementation-Title': project.name,
                'Implementation-Version': "${version}+${System.getenv("BUILD_NUMBER")?:0}+${grgit.head().abbreviatedId}",
                'Implementation-Vendor': 'Forge',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Git-Commit': grgit.head().abbreviatedId,
                'Git-Branch': grgit.branch.current().getName() ],
            'net/minecraftforge/fml/unsafe/')
}


task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}


repositories {
    mavenCentral()
    maven {
        name = 'forge'
        url = 'http://files.minecraftforge.net/maven'
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.+')
    testImplementation('org.powermock:powermock-core:2.0+')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.+')
    implementation('org.apache.logging.log4j:log4j-api:2.11.+')
    implementation('org.apache.logging.log4j:log4j-core:2.11.+')
}



artifacts {
    archives jar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            pom {
                name = 'Unsafe'
                description = 'Unsafe hacks for forge'
                url = 'https://github.com/MinecraftForge/Unsafe'
                scm {
                    url = 'https://github.com/MinecraftForge/Unsafe'
                    connection = 'scm:git:git://github.com/MinecraftForge/Unsafe.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/Unsafe.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/Unsafe/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                    }
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.properties.forgeMavenUser?:'fake'
                password project.properties.forgeMavenPassword?:'news'
            }
            url 'http://files.minecraftforge.net/maven/manage/upload'
        }
    }
}